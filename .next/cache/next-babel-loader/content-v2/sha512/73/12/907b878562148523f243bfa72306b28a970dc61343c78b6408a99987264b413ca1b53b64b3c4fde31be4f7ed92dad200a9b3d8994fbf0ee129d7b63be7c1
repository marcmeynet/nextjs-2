{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/watsum08/ReactProjects/nextjs-2/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\"; // const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"The First Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/2/27/Le_Bouveret_-_Port_Valais.jpg\",\n//     address: \"bouveret\",\n//     description: \"very nice meetup in town\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"The Second Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Vouvry_from_Corbeyrier.jpg/1200px-Vouvry_from_Corbeyrier.jpg\",\n//     address: \"vouvry\",\n//     description: \"very nice meetup just beside\",\n//   },\n// ];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"This is the Home Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }; // this code will run for every request to server\n\n\nexport async function getStaticProps() {\n  // does this on server before rendering component\n  const client = await MongoClient.connect(\"mongodb+srv://watsum08:marcmeynet08@cluster0.axn5j.mongodb.net/meetups\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1 // regenerates this page on the server every 1 second, data(meetups) will be updated every second\n\n  };\n} // code here will not show nor execute on client side, this happens on build process on server\n\nexport default HomePage;","map":{"version":3,"sources":["/home/watsum08/ReactProjects/nextjs-2/pages/index.js"],"names":["MeetupList","Head","MongoClient","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,SAA5B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE;AAAA,4BACA,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CATD,C,CAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,wEADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFgB;AAGhCC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHkB;AAIhCC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ4B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE,CATP,CASU;;AATV,GAAP;AAWD,C,CAAC;;AAEF,eAAepB,QAAf","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\n\nimport Head from \"next/head\";\nimport { MongoClient } from \"mongodb\";\n\n// const DUMMY_MEETUPS = [\n//   {\n//     id: \"m1\",\n//     title: \"The First Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/2/27/Le_Bouveret_-_Port_Valais.jpg\",\n//     address: \"bouveret\",\n//     description: \"very nice meetup in town\",\n//   },\n//   {\n//     id: \"m2\",\n//     title: \"The Second Meetup\",\n//     image:\n//       \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Vouvry_from_Corbeyrier.jpg/1200px-Vouvry_from_Corbeyrier.jpg\",\n//     address: \"vouvry\",\n//     description: \"very nice meetup just beside\",\n//   },\n// ];\n\nconst HomePage = (props) => {\n  return (\n    <>\n    <Head>\n      <title>This is the Home Page</title>\n    </Head>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n};\n\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// }; // this code will run for every request to server\n\nexport async function getStaticProps() {\n  // does this on server before rendering component\n  const client = await MongoClient.connect(\n    \"mongodb+srv://watsum08:marcmeynet08@cluster0.axn5j.mongodb.net/meetups\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString(),\n      })),\n    },\n    revalidate: 1, // regenerates this page on the server every 1 second, data(meetups) will be updated every second\n  };\n} // code here will not show nor execute on client side, this happens on build process on server\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}