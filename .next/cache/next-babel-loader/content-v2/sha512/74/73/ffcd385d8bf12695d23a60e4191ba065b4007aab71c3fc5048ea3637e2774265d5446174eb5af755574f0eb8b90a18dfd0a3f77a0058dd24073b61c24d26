{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/watsum08/ReactProjects/nextjs-2/pages/[meetupId]/index.js\";\nimport { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = () => {\n  useRouter;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/2/27/Le_Bouveret_-_Port_Valais.jpg\",\n    title: \"the first meetup\",\n    address: \"bouveret\",\n    description: \"this is the first meetxxup's description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\"mongodb+srv://watsum08:marcmeynet08@cluster0.axn5j.mongodb.net/meetups\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; // params.meetupId because the name of dynamic page is [meetupId]\n\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        image: \"https://upload.wikimedia.org/wikipedia/commons/2/27/Le_Bouveret_-_Port_Valais.jpg\",\n        id: meetupId,\n        title: \"the first meetup\",\n        address: \"bouveret\",\n        description: \"this is the first meetxxup's description\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/watsum08/ReactProjects/nextjs-2/pages/[meetupId]/index.js"],"names":["useRouter","MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","image","id","title","address","description"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1BH,EAAAA,SAAS;AACT,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,mFADR;AAEE,IAAA,KAAK,EAAC,kBAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAVD;;AAYA,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,wEADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAD4C,CACF;;AAE1CI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AACLM,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAE;AACVC,QAAAA,KAAK,EACH,mFAFQ;AAGVC,QAAAA,EAAE,EAAET,QAHM;AAIVU,QAAAA,KAAK,EAAE,kBAJG;AAKVC,QAAAA,OAAO,EAAE,UALC;AAMVC,QAAAA,WAAW,EAAE;AANH;AADP;AADF,GAAP;AAYD;AAED,eAAe5B,aAAf","sourcesContent":["import { useRouter } from \"next/router\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\nimport { MongoClient } from \"mongodb\";\n\nconst MeetupDetails = () => {\n  useRouter;\n  return (\n    <MeetupDetail\n      image=\"https://upload.wikimedia.org/wikipedia/commons/2/27/Le_Bouveret_-_Port_Valais.jpg\"\n      title=\"the first meetup\"\n      address=\"bouveret\"\n      description=\"this is the first meetxxup's description\"\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://watsum08:marcmeynet08@cluster0.axn5j.mongodb.net/meetups\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  return {\n    fallback: false,\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId; // params.meetupId because the name of dynamic page is [meetupId]\n\n  console.log(meetupId);\n\n  return {\n    props: {\n      meetupData: {\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/2/27/Le_Bouveret_-_Port_Valais.jpg\",\n        id: meetupId,\n        title: \"the first meetup\",\n        address: \"bouveret\",\n        description: \"this is the first meetxxup's description\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}